{"remainingRequest":"/Users/sahilkhanna/VUE/nrdevsites/node_modules/babel-loader/lib/index.js!/Users/sahilkhanna/VUE/nrdevsites/node_modules/eslint-loader/index.js??ref--13-0!/Users/sahilkhanna/VUE/nrdevsites/src/main.js","dependencies":[{"path":"/Users/sahilkhanna/VUE/nrdevsites/src/main.js","mtime":1532317317029},{"path":"/Users/sahilkhanna/VUE/nrdevsites/node_modules/cache-loader/dist/cjs.js","mtime":1531768828222},{"path":"/Users/sahilkhanna/VUE/nrdevsites/node_modules/babel-loader/lib/index.js","mtime":1529635966000},{"path":"/Users/sahilkhanna/VUE/nrdevsites/node_modules/eslint-loader/index.js","mtime":1519638534000}],"contextDependencies":[],"result":["// The Vue build version to load with the `import` command\n// (runtime-only or standalone) has been set in webpack.base.conf with an alias.\nimport Vue from 'vue';\nimport VueRouter from 'vue-router';\nimport App from './App';\nimport axios from 'axios'; // router setup\n\nimport routes from './routes/routes';\nimport firebase from 'firebase'; // Plugins\n\nimport GlobalComponents from './globalComponents';\nimport GlobalDirectives from './globalDirectives';\nimport Notifications from './components/NotificationPlugin'; // MaterialDashboard plugin\n\nimport MaterialDashboard from './material-dashboard';\nimport Chartist from 'chartist';\nVue.config.productionTip = false; // configure router\n\nconst router = new VueRouter({\n  mode: 'history',\n  routes,\n  // short for routes: routes\n  linkExactActiveClass: 'nav-item active'\n});\nVue.use(VueRouter);\nVue.use(MaterialDashboard);\nVue.use(GlobalComponents);\nVue.use(GlobalDirectives);\nVue.use(Notifications);\nlet app;\nrouter.beforeEach((to, from, next) => {\n  let currentUser = firebase.auth().currentUser;\n  let requiresAuth = to.matched.some(record => record.meta.requiresAuth);\n\n  if (requiresAuth && !currentUser) {\n    if (to.meta.title) {\n      document.title = to.meta.title + \" | Native Rank Devsites\";\n    } else {\n      document.title = to.name + \" | Native Rank Devsites\";\n    }\n\n    next('login');\n  } else if (!requiresAuth && currentUser) {\n    if (to.meta.title) {\n      document.title = to.meta.title + \" | Native Rank Devsites\";\n    } else {\n      document.title = to.name + \" | Native Rank Devsites\";\n    }\n\n    next('dashboard');\n  } else {\n    if (to.meta.title) {\n      document.title = to.meta.title + \" | Native Rank Devsites\";\n    } else {\n      document.title = to.name + \" | Native Rank Devsites\";\n    }\n\n    next();\n  }\n}); // // global library setup\n// Object.defineProperty(Vue.prototype, '$Chartist', {\n//   get () {\n//     return this.$root.Chartist\n//   }\n// })\n// Initialize Firebase\n\nvar config = {\n  apiKey: \"AIzaSyDB3suZNswQtMuPNsIiBhGiLT-PDk4xUcE\",\n  authDomain: \"nrsites-18624.firebaseapp.com\",\n  databaseURL: \"https://nrsites-18624.firebaseio.com\",\n  projectId: \"nrsites-18624\",\n  storageBucket: \"\",\n  messagingSenderId: \"460443800049\"\n};\nfirebase.initializeApp(config);\n/* eslint-disable */\n\nfirebase.auth().onAuthStateChanged(function (user) {\n  if (!app) {\n    /* eslint-disable no-new */\n\n    /* eslint-disable */\n    app = new Vue({\n      el: '#app',\n      render: h => h(App),\n      router,\n      data: {\n        Chartist: Chartist,\n        dSites: []\n      },\n\n      beforeMount() {\n        let user = firebase.auth().currentUser;\n        console.log(user);\n\n        if (!user.emailVerified) {\n          user.sendEmailVerification().then(function () {\n            alert('Verification is required. A verification email was sent to ' + user.email);\n          }).catch(function (error) {\n            alert('OOps.. ' + error);\n          });\n          firebase.auth().signOut().then(() => {\n            this.$router.replace('login');\n          });\n        }\n      },\n\n      mounted() {\n        axios.get(\"https://www.nrdevsites.com/servers/indexreactapp.php\").then(response => {\n          this.dSites = response.data.data.serverNames;\n        }).catch(err => {\n          alert(err.message);\n        });\n      }\n\n    });\n  }\n});",{"version":3,"sources":["src/main.js"],"names":["Vue","VueRouter","App","axios","routes","firebase","GlobalComponents","GlobalDirectives","Notifications","MaterialDashboard","Chartist","config","productionTip","router","mode","linkExactActiveClass","use","app","beforeEach","to","from","next","currentUser","auth","requiresAuth","matched","some","record","meta","title","document","name","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","initializeApp","onAuthStateChanged","user","el","render","h","data","dSites","beforeMount","console","log","emailVerified","sendEmailVerification","then","alert","email","catch","error","signOut","$router","replace","mounted","get","response","serverNames","err","message"],"mappings":"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","sourceRoot":"/Users/sahilkhanna/VUE/nrdevsites","sourcesContent":["// The Vue build version to load with the `import` command\n// (runtime-only or standalone) has been set in webpack.base.conf with an alias.\nimport Vue from 'vue'\nimport VueRouter from 'vue-router'\nimport App from './App'\nimport axios from 'axios'\n\n// router setup\nimport routes from './routes/routes'\nimport firebase from 'firebase'\n// Plugins\nimport GlobalComponents from './globalComponents'\nimport GlobalDirectives from './globalDirectives'\nimport Notifications from './components/NotificationPlugin'\n\n// MaterialDashboard plugin\nimport MaterialDashboard from './material-dashboard'\n\nimport Chartist from 'chartist'\n\nVue.config.productionTip = false\n\n\n// configure router\nconst router = new VueRouter({\n    mode: 'history',\n    routes, // short for routes: routes\n    linkExactActiveClass: 'nav-item active'\n})\n\n\n\nVue.use(VueRouter)\nVue.use(MaterialDashboard)\nVue.use(GlobalComponents)\nVue.use(GlobalDirectives)\nVue.use(Notifications)\n\nlet app;\n\nrouter.beforeEach((to, from, next) => {\n    let currentUser = firebase.auth().currentUser;\n    let requiresAuth = to.matched.some(record => record.meta.requiresAuth);\n    if (requiresAuth && !currentUser) {\n        if(to.meta.title)\n        {\n        document.title = to.meta.title + \" | Native Rank Devsites\"\n        } else\n        {\n            document.title = to.name + \" | Native Rank Devsites\"\n        }\n        next('login')\n    } else if (!requiresAuth && currentUser) {\n        if(to.meta.title)\n        {\n        document.title = to.meta.title + \" | Native Rank Devsites\"\n        } else\n        {\n            document.title = to.name + \" | Native Rank Devsites\"\n        }\n        next('dashboard')\n    } else {\n        if(to.meta.title)\n        {\n        document.title = to.meta.title + \" | Native Rank Devsites\"\n        } else\n        {\n            document.title = to.name + \" | Native Rank Devsites\"\n        }\n        next()\n    }\n})\n\n// // global library setup\n// Object.defineProperty(Vue.prototype, '$Chartist', {\n//   get () {\n//     return this.$root.Chartist\n//   }\n// })\n\n\n// Initialize Firebase\nvar config = {\n    apiKey: \"AIzaSyDB3suZNswQtMuPNsIiBhGiLT-PDk4xUcE\",\n    authDomain: \"nrsites-18624.firebaseapp.com\",\n    databaseURL: \"https://nrsites-18624.firebaseio.com\",\n    projectId: \"nrsites-18624\",\n    storageBucket: \"\",\n    messagingSenderId: \"460443800049\"\n\n}\n\n\nfirebase.initializeApp(config)\n\n/* eslint-disable */\n\n\nfirebase.auth().onAuthStateChanged(function(user) {\n    if (!app) {\n        /* eslint-disable no-new */\n        /* eslint-disable */\n        app = new Vue({\n            el: '#app',\n            render: h => h(App),\n            router,\n            data: {\n                Chartist: Chartist,\n                dSites: []\n            },\n            beforeMount() {\n              let user = firebase.auth().currentUser\n              console.log(user)\n                if (!user.emailVerified) {\n                    user.sendEmailVerification().then(function() {\n                        alert('Verification is required. A verification email was sent to ' + user.email);\n                    }).catch(function(error) {\n                        alert('OOps.. ' + error);\n                    });\n                    firebase.auth().signOut().then(() => {\n                            this.$router.replace('login')\n                        })\n                }\n            },\n            mounted() {\n                axios.get(\"https://www.nrdevsites.com/servers/indexreactapp.php\")\n                    .then(response => {\n                        this.dSites = response.data.data.serverNames\n                    })\n                    .catch(err => {\n                        alert(err.message)\n                    })\n            }\n        })\n    }\n});\n"]}]}